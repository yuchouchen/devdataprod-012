confusionMatrix(predDF$diagnosis,combPred)
confusionMatrix(testing$diagnosis,pred1)
confusionMatrix(testing$diagnosis,pred2)
confusionMatrix(testing$diagnosis,pred3)
plot(modFit_lasso$coeff, xvar="penalty")
plot(modFit_lasso$finalModel$coeff, xvar="penalty")
modFit_lasso$finalModel$coeff
modFit_lasso$finalModel
modFit_lasso$coeff
names(modFit_lasso)
modFit_lasso$coefnames
modFit_lasso$results
modFit_lasso$modelInfo
names(modFit_lasso)
modFit_lasso$metric
str(modFit_lasso)
library(rpart)
models <- caretList(
diagnosis ~ .,
trControl=trainControl(method='cv'),
methodList=c('rf', 'gbm', 'lda', data=training)
)
models <- caretList(
y=training$diagnosis,x=training$.,
trControl=trainControl(method='cv'),
methodList=c('rf', 'gbm', 'lda')
)
install.packages("caretEnsemble")
library(caretEnsemble)
models <- caretList(
y=training$diagnosis,x=training$.,
trControl=trainControl(method='cv'),
methodList=c('rf', 'gbm', 'lda')
)
models <- caretList(
training$diagnosis ~ .,
trControl=trainControl(method='cv'),
methodList=c('rf', 'gbm', 'lda'), data=training
)
meta_model <- caretStack(models, method='rf')
models <- caretList(
training$diagnosis ~ .,
trControl=trainControl(classProbs=TRUE),
methodList=c('rf', 'gbm', 'lda'), data=training
)
meta_model <- caretStack(models, method='rf')
meta_model
meta_model$finalModel
str(meta_model)
names(meta_model)
meta_model$models
meta_model
confusionMatrix(predDF$diagnosis,combPred)
confusionMatrix(testing$diagnosis,pred1)
confusionMatrix(testing$diagnosis,pred2)
confusionMatrix(testing$diagnosis,pred3)
meta_model
str(predDF)
meta_model$models
(True_no + False_no) / nrow(vowel.test)
confusionMatrix(vowel.test$y, pred_rf)
confusionMatrix(vowel.test$y, pred_gbm)
meta_model
modFit_lasso$finalModel
sum(tstest <= 774.1413) / length(tstest)
confusionMatrix(testing$diagnosis,pred1)
confusionMatrix(testing$diagnosis,pred2)
confusionMatrix(testing$diagnosis,pred3)
modFit_lasso$finalModel
names(modFit_lasso)
modFit_lasso$results
modFit_lasso$coefnames
modFit_lasso$coexlevels
modFit_lasso$xlevels
modFit_lasso
plot(modFit_lasso)
plot(modFit_lasso, xvar="penalty")
plot(modFit_lasso, xvar=c("penalty"))
plot(TSfit)
plot(forecast(TSfit))
forecast(TSfit)
nrow(tstest)
training = dat[year(dat$date) < 2012,]
testing = dat[year(dat$date) > 2011,]
nrow(training)
nrow(testing)
forecast(TSfit, h=235)
plot(forecast(TSfit, h=235))
sum(tstest <= 964.0307) / length(tstest)
length(tstest)
modFit_lasso
modFit_lasso$finalModel
plot(modFit_lasso$finalModel)
plot(modFit_lasso$finalModel, xvar="penalty")
plot(modFit_lasso$finalModel)
plot(modFit_lasso$finalModel, xvar="penalty")
plot(modFit_lasso$finalModel, xvar="penalty")
plot(modFit_lasso$finalModel)
str(modFit_lasso$finalModel)
modFit_lasso$finalModel$penalty
plot(modFit_lasso$finalModel$penalty)
plot(modFit_lasso$finalModel, xvar="penalty")
install.packages("shiny")
install.packages("zoo")
install.packages(c("AER", "cairoDevice", "ipred", "lattice", "MuMIn", "rasterVis", "Rsymphony", "survival"))
install.packages(c("AER", "cairoDevice", "ipred", "lattice", "manipulate", "MuMIn", "rasterVis", "Rsymphony", "survival"))
install.packages(c("AER", "cairoDevice", "ipred", "lattice",
"manipulate", "MuMIn", "rasterVis", "Rsymphony", "survival"))
install.packages(c("AER", "cairoDevice", "ipred", "lattice",
"manipulate"))
install.packages(c("AER", "cairoDevice", "ipred", "lattice",
))
install.packages(c("AER", "cairoDevice", "ipred", "lattice"))
install.packages(c("AER", "cairoDevice", "ipred", "lattice"))
install.packages(c("AER", "cairoDevice", "ipred", "lattice"))
install.packages("rCharts")
?manipulate
library(manipulate)
library(manipulate)
?manipulate
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
library(rCharts)
data(airquality)
install.packages(c("fields", "manipulate", "RcppEigen", "spatstat"))
install.packages("rCharts")
install_github('rCharts', 'ramnathv')
require(devtools)
install.packages("devtools")
install_github('rCharts', 'ramnathv')
library("devtools", lib.loc="d:/R/R-3.1.2/library")
install_github('rCharts', 'ramnathv')
dTable(airquality, sPaginationType = "full_numbers")
data(airquality)
dTable(airquality, sPaginationType = "full_numbers")
?data
str(airquality)
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
d <- data.frame(airquality, stringsAsFactors = FALSE)
print(d)
airquality
?dTable
str(airquality)
str(d)
head(airquality)
airquality
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
d <- data.frame(airquality, stringsAsFactors = FALSE); print(d)
require(rCharts)
data(airquality)
dTable(airquality, sPaginationType = "full_numbers")
install.packages("rjson")
install.packages("manipulate")
install.packages(c("car", "coda", "colorspace", "copula", "coxme", "deldir", "manipulate", "mgcv", "multcomp", "quantmod", "R2jags", "Rcpp", "VGAM", "yhatr"))
install.packages(c("car", "coda", "colorspace", "copula", "coxme",
"deldir", "manipulate", "mgcv", "multcomp", "quantmod", "R2jags", "Rcpp", "VGAM", "yhatr"))
install.packages(c("car", "coda", "colorspace", "copula", "coxme",
"deldir"))
install.packages(c("car", "coda", "colorspace", "copula", "coxme",
))
install.packages(c("car"))
install.packages(c("car"))
install.packages(c("car"))
install.packages(c("car", "coda", "colorspace", "copula", "coxme", "deldir", "manipulate", "mgcv", "multcomp", "quantmod", "R2jags", "Rcpp", "VGAM", "yhatr"))
library("caret", lib.loc="d:/R/R-3.1.2/library")
library("ggplot2", lib.loc="d:/R/R-3.1.2/library")
install.packages("manipulate")
library("caret", lib.loc="d:/R/R-3.1.2/library")
library("ggplot2", lib.loc="d:/R/R-3.1.2/library")
library("ggplot2", lib.loc="d:/R/R-3.1.2/library")
install.packages("ggplot2")
install.packages("caret")
install.packages("manipulate")
library("caret", lib.loc="d:/R/R-3.1.2/library")
remove.packages("caret")
install.packages("caret")
library("caret", lib.loc="d:/R/R-3.1.2/library")
library("ggplot2", lib.loc="d:/R/R-3.1.2/library")
remove.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
install.packages("Rcpp")
library(ggplot2)
install.packages("colorspace")
library(ggplot2)
install.packages("manipulate")
install.packages("shiny")
install.packages("forecast")
install.packages("Applied")
install.packages("AppliedPredictiveModeling")
shiny::runApp('R programming/devdataprod-012/ShinyProject')
install.packages("markdown")
shiny::runApp('R programming/devdataprod-012/ShinyProject')
str(cars)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
data(FuelEconomy)
data(FuelEconomy)
library("AppliedPredictiveModeling", lib.loc="D:/R/R-3.1.3/library")
library(AppliedPredictiveModeling)
data(FuelEconomy)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
names(dataset)
plotData <- rbind(cars2010a, cars2011a)
cars2010 <- cars2010[order(cars2010$EngDispl),]
cars2011 <- cars2011[order(cars2011$EngDispl),]
cars2010a <- cars2010
cars2010a$Year <- "2010 Model Year"
cars2011a <- cars2011
cars2011a$Year <- "2011 Model Year"
plotData <- rbind(cars2010a, cars2011a)
dataset <- plotData
names(dataset)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
names(dataset) <- c("Eng Displ", "Num Cyl", "Tranmission", "Fuel Economy",
"AirAspirationMethod", "Num Gears", "Trans Lockup",
"Trans Creeper Gear", "Drive Desc", "Intake Valve Per Cyl",
"Exhaust Valves Per Cyl", "Carline Class Desc", "Var Valve Timing",
"Var Valve Lift", "Year")
names(dataset)
str(dataset)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
names(dataset)[[2]]
names(dataset)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
names(dataset)[1]
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
runApp("ShinyProject", display.mode = "showcase")
shiny::runApp('R programming/devdataprod-012/ShinyProject', display.mode = "showcase")
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
str(plotData)
data(FuelEconomy)
str(FuelEconomy)
cars2010 <- cars2010[order(cars2010$EngDispl),]
cars2011 <- cars2011[order(cars2011$EngDispl),]
cars2010a <- cars2010
cars2010a$Year <- "2010 Model Year"
cars2011a <- cars2011
cars2011a$Year <- "2011 Model Year"
plotData <- rbind(cars2010a, cars2011a)
dataset <- plotData
str(dataset)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
str(plotData)
hist(plotData$EngDispl)
hist(plotData$FE)
table(plotData$NumCyl)
hist(plotData$NumCyl)
hist(plotData$AirAspirationMethod)
table(plotData$AirAspirationMethod)
hist(as.numeric(plotData$AirAspirationMethod))
barplot(plotData$AirAspirationMethod)
g <- ggplot(plotData, aes(factor(AirAspirationMethod)))
g + geom_bar()
g <- ggplot(plotData, aes(factor(NumCyl)))
g + geom_bar()
str(plotData)
g <- ggplot(plotData, aes(factor(CarlineClassDesc)))
g + geom_bar()
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject', display.mode = "showcase")
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
g <- ggplot(dataset(), aes(factor(Year))) + geom_bar()
g <- ggplot(dataset, aes(factor(Year))) + geom_bar()
g
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
hist(dataset$EngDispl)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
str(dataset)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
is.factor(dataset$AirAspirationMethod)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
runExample("03_reactivity")
runExample("03_reactivity")
runExample("03_reactivity")
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
runExample("03_reactivity")
runExample("03_reactivity")
shiny::runApp('R programming/devdataprod-012/ShinyProject')
runExample("03_reactivity")
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
head(dataset$EngDispl)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
head(dataset)
head(dataset$EngDispl)
head(dataset[1])
head(dataset[2])
names(dataset)
dataset(names(dataset)[1])
names(dataset)[[1]]
dataset(names(dataset)[[1]])
dataset`names(dataset)[[1]]`
dataset$names(dataset)[[1]]
dataset`$names(dataset)[[1]]`
dataset[names(dataset)[[1]]]
head(dataset[names(dataset)[[1]]])
names(dataset$EngDispl)
names(dataset[[]])
names(dataset[[1]])
names(dataset)
names(dataset[1])
datset(names(dataset[1]))
dataset(names(dataset[1]))
dataset[names(dataset[1])]
shiny::runApp('R programming/devdataprod-012/ShinyProject')
head(dataset[names(dataset[1])]
)
head(dataset[names("EngDispl")])
dataset[names("EngDispl")]
dataset$EngDispl
head(dataset[names("EngDispl")])
head(dataset["EngDispl"])
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
head(dataset["EngDispl"])
head(dataset[`"EngDispl"`])
head(dataset[`EngDispl`])
head(dataset["EngDispl"])
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
head(dataset$EngDispl)
head(dataset[EngDispl]
)
head(dataset["EngDispl"])
shiny::runApp('R programming/devdataprod-012/ShinyProject')
head(dataset[names("EngDispl")])
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
dataset[1]
head(dataset[1])
shiny::runApp('R programming/devdataprod-012/ShinyProject')
head(dataset$1)
head(dataset$EngDispl)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
str(dataset)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
hist(dataset$EngDispl)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
ggplot(dataset, aes(factor(EngDisply))) + geom_bar()
ggplot(dataset, aes(factor(EngDispl))) + geom_bar()
shiny::runApp('R programming/devdataprod-012/ShinyProject')
library("shiny", lib.loc="D:/R/R-3.1.3/library")
install.packages("devtools")
library("devtools", lib.loc="D:/R/R-3.1.3/library")
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
runExample("03_reactivity")
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
namesVector <- c("Eng Displ"="EngDispl", "Num Cyl"="NumCyl", "Transmission",
"Fuel Economy"="FE", "Air Aspiration Method"="AirAspirationMethod",
"Num Gears"="NumGears", "Trans Lockup"="TransLockup",
"Trans Creeper Gear"="TransCreeperGear", "Drive Desc"="DriveDesc",
"Intake Valve Per Cyl"="IntakeValvePerCyl",
"Exhaust Valves Per Cyl"="ExhaustValvesPerCyl",
"Carline Class Desc"="CarlineClassDesc", "Var Valve Timing"="VarValveTiming",
"Var Valve Lift"="VarValveLift", "Year")
namesVector
namesnamesVector()
names()
names(namesVector)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
names(dataset)
names(namesVector)
shiny::runApp('R programming/devdataprod-012/ShinyProject')
names(namesVector["NumGears"])
names(namesVector["Num Gears"])
names(namesVector["NumGears"])
namesVector["NumGers"]
namesVector["NumGears"]
names(namesVector)
names(namesVector["Eng Displ"])
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
names(namesVector["NumGears"])
names(namesVector["Num Gears"])
names(namesVector$`Eng Displ`)
namesVector$`Eng Displ`
namesVector$EngDispl
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
runExample("07_widgets")
runExample("04_mpg")
runExample("03_reactivity")
runExample("05_sliders")
runExample("06_tabsets")
shiny::runApp('R programming/devdataprod-012/ShinyProject')
shiny::runApp('R programming/devdataprod-012/ShinyProject')
